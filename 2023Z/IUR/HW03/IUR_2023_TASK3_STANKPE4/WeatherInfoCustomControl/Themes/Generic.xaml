<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WeatherInfoCustomControl"
    xmlns:converters="clr-namespace:WeatherInfoCustomControl.Converters">

    <converters:BoolToVisibiltyConverter x:Key="boolToVisibiltyConverter" />
    <converters:WeatherNetImageConverter x:Key="weatherNetImageConverter" />

    <Style TargetType = "{x:Type local:WeatherInfo}"
      BasedOn = "{StaticResource {x:Type ToggleButton}}">
        <Setter Property = "Background" Value = "LightSalmon" />
        <Setter Property = "Foreground" Value = "Blue"/>
        <Setter Property = "BorderThickness" Value = "5"/>

        <Setter Property = "Content" Value = "{Binding RelativeSource={RelativeSource Self}, Path=City}"/>
        <Setter Property="Margin" Value="2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WeatherInfo}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" x:Name="border">
                            
                            <StackPanel Height="140" Visibility="{TemplateBinding IsChecked, 
                            Converter={StaticResource boolToVisibiltyConverter}, ConverterParameter=True}">
                                <Label Content="{TemplateBinding City}" FontSize="20" 
                                       HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 0, 0, 0"/>
                                <Label Content="{TemplateBinding Conditions}" FontSize="14"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0, 0, 0 ,0"/>
                                <DockPanel>
                                    <Label DockPanel.Dock="Left" Content="{TemplateBinding Temperature}" ContentStringFormat=" {0} &#186;C" FontSize="14" 
                                        HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30, 0, 0 ,0"/>
                                    <Label DockPanel.Dock="Right" Content="{TemplateBinding Humidity}" ContentStringFormat=" {0} %" FontSize="14" 
                                        HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0, 0, 30 ,0"/>
                                </DockPanel>
                                <Image Height="45" Width="45" Source="{TemplateBinding Icon, Converter={StaticResource weatherNetImageConverter}}"
                                       HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0, 0, 0, 10"/>
                            </StackPanel>
                            
                        </Border>
                        
                        <StackPanel Height="140" Visibility="{TemplateBinding IsChecked,
                        Converter={StaticResource boolToVisibiltyConverter}, ConverterParameter=False}">
                            <Label Content="City:" FontSize="14" HorizontalAlignment="Left" Margin="10, 10, 0, 0"/>
                            <TextBox Width="170" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=City, Mode=TwoWay}"
                            FontSize="14" HorizontalAlignment="Left" Margin="15, 0, 0 , 0"/>
                            <Button Content="Remove" FontSize="14" HorizontalAlignment="Center" Margin="0, 15, 0, 0" Command="{TemplateBinding Remove}"/>
                        </StackPanel>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Yellow"></Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.3"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.7"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.3"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.6"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.7"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="Orange"></Setter>
            </Trigger>
            
        </Style.Triggers>
    </Style>
</ResourceDictionary>
